[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "amica-python"
version = "0.1.0"
description = "Adaptive Mixture ICA in Python"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "loguru",
    "pooch >= 1.5", 
    "psutil",
    "numpy>=2.2.6",
    "scikit-learn>=1.7.0",
]

[project.optional-dependencies]
torch-cpu = ["torch"]
torch-cuda = ["torch"]
dev = ["pytest", "pytest-cov", "pytest-timeout", "matplotlib", "mne", "ruff"]
doc = ["sphinx<8.2", "shibuya", "sphinx-gallery", "numpydoc"]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["amica*"]
exclude = ["amica.tests*"]

[tool.ruff.lint]
select = ["A", "B006", "D", "E", "F", "I", "UP", "UP031", "W"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"src/amica/_types.py" = ["E501"]  # Line too long
"src/amica/**/__init__.py" = ["D104"]  # Missing docstring in public package
"src/amica/**/tests/*.py" = ["D100"]  # Missing docstring in public module


[[tool.uv.index]]
name = "pytorch_cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true # only fetch from this index if we explicitly map a package there.

[tool.uv.sources]
torch = { index = "pytorch_cpu" }
markupsafe = { index = "pytorch_cpu" }

[tool.pytest.ini_options]
addopts = [
    "--cov-branch",
    "--cov-report=xml",
    "--cov-report=term",
]

[tool.coverage.run]
# Source files to measure.
source = ["amica"]
# Add branch coverage to the analysis.
branch = true
# Specify which files to omit from the coverage report.
omit = [
    "*/tests/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]